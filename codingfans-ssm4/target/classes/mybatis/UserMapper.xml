<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.codingfans.repository.mybatis.UserMapper" >
    <resultMap id="UserMapper" type="com.codingfans.model.User" >
        <result column="USER_ID" property="userId" jdbcType="CHAR" />
        <result column="EMAIL" property="email" jdbcType="VARCHAR" />
        <result column="PLAIN_PWD" property="plainPwd" jdbcType="VARCHAR" />
        <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
        <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
        <result column="SALT" property="salt" jdbcType="VARCHAR" />
        <result column="STATUS" property="status" jdbcType="CHAR" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    </resultMap>
    
    <sql id="Base_Column_List" >
    	USER_ID,
        EMAIL,
        PLAIN_PWD,
        PASSWORD,
        REAL_NAME,
        SALT,
        STATUS,
        USER_NAME
    </sql>
    
    <select id="read" resultMap="UserMapper" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from TB_USER
        where USER_ID = #{userId,jdbcType=CHAR}
    </select>
    
    <insert id="insert" parameterType="com.codingfans.model.User" useGeneratedKeys="true" keyProperty="userId" >
        <selectKey keyProperty="userId" resultType="java.lang.String" order="BEFORE">
			select nextval for USER_ID from sysibm.sysdummy1
		</selectKey>
        insert into TB_USER (<include refid="Base_Column_List" />)
        values (
        #{userId,jdbcType=CHAR},
        #{email,jdbcType=VARCHAR},
        #{plainPwd,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        #{realName,jdbcType=VARCHAR},
        #{salt,jdbcType=VARCHAR},
        #{status,jdbcType=CHAR},
        #{userName,jdbcType=VARCHAR}
        )
    </insert>
    
    <update id="update" parameterType="com.codingfans.model.User" >
        update TB_USER
        <set>
            EMAIL = #{email,jdbcType=VARCHAR},
            USER_ID = #{userId,jdbcType=CHAR},
            PLAIN_PWD = #{plainPwd,jdbcType=VARCHAR},
            PASSWORD = #{password,jdbcType=VARCHAR},
            REAL_NAME = #{realName,jdbcType=VARCHAR},
            SALT = #{salt,jdbcType=VARCHAR},
            STATUS = #{status,jdbcType=CHAR},
            USER_NAME = #{userName,jdbcType=VARCHAR}
        </set>
        where USER_ID = #{userId,jdbcType=CHAR}
    </update>
    
    <delete id="delete" parameterType="java.lang.String" >
        delete from TB_USER
        where USER_ID = #{userId,jdbcType=CHAR}
    </delete>
    
    <select id="queryUserCount" resultType="java.lang.Integer">
    	select count(1) from TB_USER
    </select>
    
    <select id="queryUserList" resultMap="UserMapper" parameterType="com.codingfans.model.User">
    	select <include refid="Base_Column_List" /> from TB_USER
    	<where>
    	1=1
    		<if test="userId != null and userId != ''">
    			and USER_ID = #{userId,jdbcType=CHAR}
    		</if>
    		<if test="userName != null and userName != ''">
    			and USER_NAME = #{userName,jdbcType=VARCHAR}
    		</if>
    		<if test="realName != null and realName != ''">
    			and REAL_NAME = #{realName,jdbcType=VARCHAR}
    		</if>
    	</where>
    </select>
    
    <select id="queryByUserName" parameterType="java.lang.String"
    	 resultMap="UserMapper">
    	select <include refid="Base_Column_List" /> from TB_USER 
    	where USER_NAME = #{userName,jdbcType=VARCHAR}
    </select>
    
    <select id="getPageList" parameterType="com.codingfans.model.User" resultMap="UserMapper">
    	select <include refid="Base_Column_List" /> from TB_USER
    	<where>
    	1=1
    		<if test="userId != null and userId != ''">
    			and USER_ID = #{userId,jdbcType=CHAR}
    		</if>
    		<if test="userName != null and userName != ''">
    			and USER_NAME like '%${userName}%'
    		</if>
    		<if test="realName != null and realName != ''">
    			and REAL_NAME = #{realName,jdbcType=VARCHAR}
    		</if>
    	</where>
    </select>
    
</mapper>